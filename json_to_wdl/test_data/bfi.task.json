[
  {
    "task_id": "Bfi",
    "main": "/data/pipeline/BFIv2.0/bin/getBFI.pyc",
    "cmd": "${parameters.python}/python ${main} -i ${input_files.sample_list}",
    "cpu":4,
    "memory": 40,
    "outputs": [
      {
        "key": "result",
        "value": "${parameters.outdir}/${sample.sample_id}/7.getreport",
        "file_pattern": "[*]",
        "type": "Folder"
      }
    ],

    "parameters": [
      {
        "order": 1,
        "key": "thread_assembly",
        "map_key": "-t1",
        "type": "Int",
        "display_name_en": "Thread of assembly",
        "display_name_cn": "组装进程数",
        "description_en": "Thread of assembly",
        "description_cn": "组装进程数",
        "required": false,
        "validation_rule": "",
        "default": 4,
        "value_from": ""
      },
      {
        "order": 2,
        "key": "thread_map",
        "map_key": "-t2",
        "type": "Int",
        "display_name_en": "Thread of mapping",
        "display_name_cn": "比对进程数",
        "description_en": "Thread of mapping",
        "description_cn": "比对进程数",
        "required": false,
        "validation_rule": "",
        "default": 4,
        "value_from": ""
      },
      {
          "order": 3,
          "key": "specie",
          "map_key": "-s",
          "type": "String",
          "display_name_en": "Bacteria of specie",
          "display_name_cn": "细菌名",
          "description_en": "Which species of Bacteria.If you don't know,you can set 0. [1: A.baumannii; 2: A.hydrophila; 3: B.anthraci; 4: B.pertussis; 5: B.pseudomallei;6: Brucella; 7: C.diphtheriae; 8: C.jejuni; 9: Clostridioides.difficile; 10: Cronobacter.spp; 11: E.coli; 12: Group.A.Streptococcus; 13: H.influenzae; 14: K.pneumoniae; 15: Legionella; 16: Leptospir; 17: L.monocytogenes; 18: N.meningitidis;19: salmonella; 20: S.aureus; 21: Shigella; 22: S.pneumoniae; 23: S.suis; 24: vibrio_cho; 25: vibrio_para; 26: Y.enterocolitica; 0: auto judge]",
          "description_cn": "单菌的物种，如果不知道设置为0，进行自动鉴定. [1: A.baumannii; 2: A.hydrophila; 3: B.anthraci; 4: B.pertussis; 5: B.pseudomallei;6: Brucella; 7: C.diphtheriae; 8: C.jejuni; 9: Clostridioides.difficile; 10: Cronobacter.spp; 11: E.coli; 12: Group.A.Streptococcus; 13: H.influenzae; 14: K.pneumoniae; 15: Legionella; 16: Leptospir; 17: L.monocytogenes; 18: N.meningitidis;19: salmonella; 20: S.aureus; 21: Shigella; 22: S.pneumoniae; 23: S.suis; 24: vibrio_cho; 25: vibrio_para; 26: Y.enterocolitica; 0: auto judge]",
          "required": true,
          "validation_rule": ["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26"],
          "default": "0",
          "value_from": ""
       },
       {
          "order": 4,
          "key": "Type",
          "map_key": "-g",
          "type": "String",
          "required": true,
          "display_name_en": "Sequencing type",
          "display_name_cn": "Sequencing type",
          "description_en": "Sequencing type",
          "description_cn": "Sequencing type",
          "validation_rule": ["1","2"],
          "default": "2",
          "value_from": "code#def getse(read2=${sample.metadata.files.read2}):\n  return'2' if read2 else '1'#"
       },
       {
          "order": 5,
          "key": "datasize",
          "map_key": "-l",
          "type": "String",
          "required": false,
          "display_name_en": "Cut Data size bp",
          "display_name_cn": "截取数据量bp",
          "description_en": "The Data size that for next analysis",
          "description_cn": "用来做后续分析的数据量bp",
          "validation_rule": "",
          "default": "0",
          "value_from": ""
       },
       {
          "order": 6,
          "key": "trim_fq",
          "map_key": "-Q",
          "type": "String",
          "required": false,
          "display_name_en": "Filter raw data",
          "display_name_cn": "过滤原始数据",
          "description_en": "filter raw data with the parameter -f",
          "description_cn": "用参数-f过滤原始数据",
          "validation_rule": ["T","F"],
          "default": "T",
          "value_from": ""
       },
       {
          "order": 7,
          "key": "trim_para",
          "map_key": "-f",
          "type": "String",
          "required": true,
          "display_name_en": "The parameters for -Q",
          "display_name_cn": "过滤原始数据参数",
          "description_en": "The parameters for -Q",
          "description_cn": "过滤原始数据参数",
          "validation_rule": "",
          "default": " -f AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA -r AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG -l 10 -q 0.1 -n 0.04 -Q 2",
          "value_from": "",
          "have_blank_value": true
       },
       {
          "order": 8,
          "key": "assembly",
          "map_key": "-a",
          "type": "String",
          "required": false,
          "display_name_en": "Assembly",
          "display_name_cn": "组装",
          "description_en": "Assembly",
          "description_cn": "组装",
          "validation_rule": "",
          "default": "T",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 9,
          "key": "Size",
          "map_key": "-z",
          "type": "String",
          "required": false,
          "display_name_en": "The minmum length of assembly sequence",
          "display_name_cn": "组装最小序列长度",
          "description_en": "The minmum length of assembly sequence",
          "description_cn": "组装最小序列长度",
          "validation_rule": "",
          "default": "500",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 10,
          "key": "Serotype",
          "map_key": "-c",
          "type": "String",
          "required": false,
          "display_name_en": "Serotype",
          "display_name_cn": "血清鉴定",
          "description_en": "Identfication serotype",
          "description_cn": "血清鉴定",
          "validation_rule": "",
          "default": "T",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 11,
          "key": "report_html",
          "map_key": "-b",
          "type": "String",
          "required": false,
          "display_name_en": "Report",
          "display_name_cn": "报告",
          "description_en": "Get report",
          "description_cn": "产生报告",
          "validation_rule": "",
          "default": "T",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 12,
          "key": "report_name",
          "map_key": "-n",
          "type": "String",
          "required": false,
          "display_name_en": "Name of Report",
          "display_name_cn": "报告前缀",
          "description_en": "Name of report",
          "description_cn": "报告前缀",
          "validation_rule": "",
          "default": "no",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 13,
          "key": "python",
          "map_key": "-py",
          "type": "String",
          "required": false,
          "display_name_en": "python",
          "display_name_cn": "python",
          "description_en": "python",
          "description_cn": "python",
          "validation_rule": "",
          "have_in_cmd": true,
          "ui_no_need": true,
          "default": "/data/pipeline/BFIv2.0/tools/anaconda2/bin",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 14,
          "key": "outdir",
          "map_key": "-o",
          "type": "String",
          "required": true,
          "display_name_en": "outdir name",
          "display_name_cn": "输出目录名",
          "description_en": "outdir name",
          "description_cn": "输出目录名",
          "validation_rule": "",
          "default": "results",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 15,
          "key": "antibioc_coverage",
          "map_key": "-C",
          "type": "String",
          "required": true,
          "display_name_en": "antibioc_coverage",
          "display_name_cn": "antibioc_coverage",
          "description_en": "querry coverage per subject for antibioc analysis, default 90",
          "description_cn": "序列与参考数据集序列的覆盖度，默认90",
          "validation_rule": "",
          "default": "90",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 16,
          "key": "antibioc_identy",
          "map_key": "-l",
          "type": "String",
          "required": true,
          "display_name_en": "antibioc_identy",
          "display_name_cn": "antibioc_identy",
          "description_en": "querry identy per subject for antibioc analysis, default 85",
          "description_cn": "序列与参考数据集序列的相似度，默认85",
          "validation_rule": "",
          "default": "85",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 17,
          "key": "Mininum_strain_phylogenetic",
          "map_key": "-k",
          "type": "String",
          "required": true,
          "display_name_en": "Mininumstrainphylogenetic",
          "display_name_cn": "Mininumstrainphylogenetic",
          "description_en": "Mininum strain for phylogenetic tree,default:50",
          "description_cn": "最近缘菌株序列个数，默认50个",
          "validation_rule": "",
          "default": "50",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       },
       {
          "order": 18,
          "key": "merge_all",
          "map_key": "-mg",
          "type": "String",
          "required": false,
          "display_name_en": "Merge all sample tree",
          "display_name_cn": "多样本进化树",
          "description_en": "plot all sample phylogenetic tree, default:F",
          "description_cn": "画所有样本进化树，默认不,同个菌种才可以",
          "validation_rule": ["T","F"],
          "default": "F",
          "value_from": "",
          "line_template": "%(key)s = %(value)s"
       }
    ],
    "input_files": [
        {
        "file_name": "sample_list",
        "barcode_files_type": "MERGE",
        "column_separator": "\t",
        "barcode_files_merge_by": ":",
        "columns": [
          {
            "value_from": "${sample.sample_id}"
          },
          {
            "value_from": "${sample.metadata.files.read1}",
            "required": true,
            "file_filter": "*.fq.gz,*fq"
          },
          {
            "value_from": "${sample.metadata.files.read2}",
            "required": false,
            "file_filter": "*.fq.gz,*fq"
          }
        ]
      }
    ]
  }
]
