[
  {
    "task_id": "Pfi",
    "main": "/mnt/disk0/pipeline/PFI/bin/easy_run_local",
    "cmd": "${main} ${input_files.sampleList}",
    "cpu": 4,
    "memory": 100,
    "docker": {
      "image": "pfi:v0.1",
      "volumns": [
        "/storeData/db:/data/pipeline/pfi/db"
      ]
    },
    "outputs": [
      {
        "key": "result",
        "value": "${parameters.outdir}/Result",
        "file_pattern": "[*]",
        "type": "Folder"
      }
    ],
    "parameters": [
      {
        "order": 1,
        "key": "host",
        "map_key": "--db_host",
        "type": "String",
        "required": true,
        "display_name_en": "Host",
        "display_name_cn": "宿主",
        "description_en": "Host",
        "description_cn": "宿主",
        "validation_rule": ["Human","Mouse", "Rat", "Carp", "Goose", "Goat", "Sheep", "Scrofa", "Cat", "Chicken", "Cow","Dog", "Duck", "Rabbit"],
        "default": "",
        "value_from": "${sample.metadata.host}"
      },
      {
        "order": 2,
        "key": "db_kraken",
        "map_key": "--db_kraken",
        "type": "String",
        "required": true,
        "display_name_en": "DB kraken",
        "display_name_cn": "比对数据库",
        "description_en": "DB kraken",
        "description_cn": "比对数据库",
        "validation_rule": ["all", "mini"],
        "default": "all",
        "value_from": ""
      },
      {
        "order": 3,
        "key": "outdir",
        "map_key": "--outdir",
        "type": "String",
        "required": true,
        "ui_no_need": true,
        "display_name_en": "Output dir",
        "display_name_cn": "输出路径",
        "description_en": "Output dir",
        "description_cn": "输出路径",
        "validation_rule": "",
        "default": "result",
        "value_from": ""
      }
    ],
    "input_files": [
      {
        "file_name": "sampleList",
        "barcode_files_type": "EACH_LINE",
        "column_separator": "\t",
        "columns": [
          {
            "value_from": "${sample.sample_id}"
          },
          {
            "value_from": "${sample.metadata.sample_source}",
            "validation_rule": ["DNA", "RNA"],
            "required": true
          },
          {
            "value_from": "${sample.metadata.files.read1}",
            "file_filter": "*.fq.gz,*fq"
          },
          {
            "value_from": "${sample.metadata.files.read2}",
            "file_filter": "*.fq.gz,*fq",
            "required": false
          }
        ]
      }
    ],
    "input": [
      {
        "key": "files.read1",
        "type": "File",
        "file_filter": "*.fq.gz,*fq"
      },
      {
        "key": "files.read2",
        "type": "File",
        "file_filter": "*.fq.gz,*fq"
      }
    ],
    "output": [
      {
        "key": "files.read1",
        "type": "File",
        "pattern": "*_1.fq.gz$"
      },
      {
        "key": "files.read2",
        "type": "File",
        "pattern": "*_2.fq.gz$"
      }
    ]
  }
]