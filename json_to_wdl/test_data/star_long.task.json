[{
    "task_id": "Star_long",
    "main": "",
    "cmd": "",
    "cpu": 4,
    "memory": 4,
    "docker": {
        "image": "",
        "volumns": [
            "/storeData/db:/data/pipeline/pfi/db"
        ]
    },
    "outputs": [
        {
            "key": "result",
            "value": "./",
            "type": "Folder"
        }
    ],
    "parameters": [
        {
            "order": 0,
            "key": "runMode",
            "map_key": "--runMode",
            "type": "String",
            "required": false,
            "display_name_en": "runMode",
            "display_name_cn": "runMode",
            "description_en": "type of the run.",
            "description_cn": "type of the run.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 1,
            "key": "runThreadN",
            "map_key": "--runThreadN",
            "type": "String",
            "required": false,
            "display_name_en": "runThreadN",
            "display_name_cn": "runThreadN",
            "description_en": "number of threads to run STAR",
            "description_cn": "number of threads to run STAR",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 2,
            "key": "runDirPerm",
            "map_key": "--runDirPerm",
            "type": "String",
            "required": false,
            "display_name_en": "runDirPerm",
            "display_name_cn": "runDirPerm",
            "description_en": "permissions for the directories created at the run-time.",
            "description_cn": "permissions for the directories created at the run-time.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 3,
            "key": "runRNGseed",
            "map_key": "--runRNGseed",
            "type": "String",
            "required": false,
            "display_name_en": "runRNGseed",
            "display_name_cn": "runRNGseed",
            "description_en": "random number generator seed.",
            "description_cn": "random number generator seed.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 4,
            "key": "genomeDir",
            "map_key": "--genomeDir",
            "type": "String",
            "required": false,
            "display_name_en": "genomeDir",
            "display_name_cn": "genomeDir",
            "description_en": "path to the directory where genome files are stored (for --runMode alignReads) or will be generated (for --runMode generateGenome)",
            "description_cn": "path to the directory where genome files are stored (for --runMode alignReads) or will be generated (for --runMode generateGenome)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 5,
            "key": "genomeLoad",
            "map_key": "--genomeLoad",
            "type": "String",
            "required": false,
            "display_name_en": "genomeLoad",
            "display_name_cn": "genomeLoad",
            "description_en": "mode of shared memory usage for the genome files. Only used with --runMode alignReads.",
            "description_cn": "mode of shared memory usage for the genome files. Only used with --runMode alignReads.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 6,
            "key": "genomeFastaFiles",
            "map_key": "--genomeFastaFiles",
            "type": "String",
            "required": false,
            "display_name_en": "genomeFastaFiles",
            "display_name_cn": "genomeFastaFiles",
            "description_en": "path(s) to the fasta files with the genome sequences, separated by spaces. These files should be plain text FASTA files, they *cannot* be zipped.",
            "description_cn": "path(s) to the fasta files with the genome sequences, separated by spaces. These files should be plain text FASTA files, they *cannot* be zipped.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 7,
            "key": "genomeChainFiles",
            "map_key": "--genomeChainFiles",
            "type": "String",
            "required": false,
            "display_name_en": "genomeChainFiles",
            "display_name_cn": "genomeChainFiles",
            "description_en": "chain files for genomic liftover. Only used with --runMode liftOver .",
            "description_cn": "chain files for genomic liftover. Only used with --runMode liftOver .",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 8,
            "key": "genomeFileSizes",
            "map_key": "--genomeFileSizes",
            "type": "String",
            "required": false,
            "display_name_en": "genomeFileSizes",
            "display_name_cn": "genomeFileSizes",
            "description_en": "genome files exact sizes in bytes. Typically, this should not be defined by the user.",
            "description_cn": "genome files exact sizes in bytes. Typically, this should not be defined by the user.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 9,
            "key": "genomeConsensusFile",
            "map_key": "--genomeConsensusFile",
            "type": "String",
            "required": false,
            "display_name_en": "genomeConsensusFile",
            "display_name_cn": "genomeConsensusFile",
            "description_en": "VCF file with consensus SNPs (i.e. alternative allele is the major (AF>0.5) allele)",
            "description_cn": "VCF file with consensus SNPs (i.e. alternative allele is the major (AF>0.5) allele)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 10,
            "key": "genomeChrBinNbits",
            "map_key": "--genomeChrBinNbits",
            "type": "String",
            "required": false,
            "display_name_en": "genomeChrBinNbits",
            "display_name_cn": "genomeChrBinNbits",
            "description_en": "=log2(chrBin), where chrBin is the size of the bins for genome storage: each chromosome will occupy an integer number of bins. For a genome with large number of contigs, it is recommended to scale this parameter as min(18, log2[max(GenomeLength/NumberOfReferences,ReadLength)]).",
            "description_cn": "=log2(chrBin), where chrBin is the size of the bins for genome storage: each chromosome will occupy an integer number of bins. For a genome with large number of contigs, it is recommended to scale this parameter as min(18, log2[max(GenomeLength/NumberOfReferences,ReadLength)]).",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 11,
            "key": "genomeSAindexNbases",
            "map_key": "--genomeSAindexNbases",
            "type": "String",
            "required": false,
            "display_name_en": "genomeSAindexNbases",
            "display_name_cn": "genomeSAindexNbases",
            "description_en": "length (bases) of the SA pre-indexing string. Typically between 10 and 15. Longer strings will use much more memory, but allow faster searches. For small genomes, the parameter --genomeSAindexNbases must be scaled down to min(14, log2(GenomeLength)/2 - 1).",
            "description_cn": "length (bases) of the SA pre-indexing string. Typically between 10 and 15. Longer strings will use much more memory, but allow faster searches. For small genomes, the parameter --genomeSAindexNbases must be scaled down to min(14, log2(GenomeLength)/2 - 1).",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 12,
            "key": "genomeSAsparseD",
            "map_key": "--genomeSAsparseD",
            "type": "String",
            "required": false,
            "display_name_en": "genomeSAsparseD",
            "display_name_cn": "genomeSAsparseD",
            "description_en": "suffux array sparsity, i.e. distance between indices: use bigger numbers to decrease needed RAM at the cost of mapping speed reduction",
            "description_cn": "suffux array sparsity, i.e. distance between indices: use bigger numbers to decrease needed RAM at the cost of mapping speed reduction",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 13,
            "key": "genomeSuffixLengthMax",
            "map_key": "--genomeSuffixLengthMax",
            "type": "String",
            "required": false,
            "display_name_en": "genomeSuffixLengthMax",
            "display_name_cn": "genomeSuffixLengthMax",
            "description_en": "maximum length of the suffixes, has to be longer than read length. -1 = infinite.",
            "description_cn": "maximum length of the suffixes, has to be longer than read length. -1 = infinite.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 14,
            "key": "genomeType",
            "map_key": "--genomeType",
            "type": "String",
            "required": false,
            "display_name_en": "genomeType",
            "display_name_cn": "genomeType",
            "description_en": "type of genome to generate",
            "description_cn": "type of genome to generate",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 15,
            "key": "genomeTransformType",
            "map_key": "--genomeTransformType",
            "type": "String",
            "required": false,
            "display_name_en": "genomeTransformType",
            "display_name_cn": "genomeTransformType",
            "description_en": "type of genome transformation",
            "description_cn": "type of genome transformation",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 16,
            "key": "genomeTransformVCF",
            "map_key": "--genomeTransformVCF",
            "type": "String",
            "required": false,
            "display_name_en": "genomeTransformVCF",
            "display_name_cn": "genomeTransformVCF",
            "description_en": "path to VCF file for genome transformation",
            "description_cn": "path to VCF file for genome transformation",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 17,
            "key": "sjdbFileChrStartEnd",
            "map_key": "--sjdbFileChrStartEnd",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbFileChrStartEnd",
            "display_name_cn": "sjdbFileChrStartEnd",
            "description_en": "path to the files with genomic coordinates (chr <tab> start <tab> end <tab> strand) for the splice junction introns. Multiple files can be supplied wand will be concatenated.",
            "description_cn": "path to the files with genomic coordinates (chr <tab> start <tab> end <tab> strand) for the splice junction introns. Multiple files can be supplied wand will be concatenated.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 18,
            "key": "sjdbGTFfile",
            "map_key": "--sjdbGTFfile",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbGTFfile",
            "display_name_cn": "sjdbGTFfile",
            "description_en": "path to the GTF file with annotations",
            "description_cn": "path to the GTF file with annotations",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 19,
            "key": "sjdbGTFchrPrefix",
            "map_key": "--sjdbGTFchrPrefix",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbGTFchrPrefix",
            "display_name_cn": "sjdbGTFchrPrefix",
            "description_en": "prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL annotations with UCSC genomes)",
            "description_cn": "prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL annotations with UCSC genomes)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 20,
            "key": "sjdbGTFfeatureExon",
            "map_key": "--sjdbGTFfeatureExon",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbGTFfeatureExon",
            "display_name_cn": "sjdbGTFfeatureExon",
            "description_en": "feature type in GTF file to be used as exons for building transcripts",
            "description_cn": "feature type in GTF file to be used as exons for building transcripts",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 21,
            "key": "sjdbGTFtagExonParentTranscript",
            "map_key": "--sjdbGTFtagExonParentTranscript",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbGTFtagExonParentTranscript",
            "display_name_cn": "sjdbGTFtagExonParentTranscript",
            "description_en": "GTF attribute name for parent transcript ID (default \"transcript_id\" works for GTF files)",
            "description_cn": "GTF attribute name for parent transcript ID (default \"transcript_id\" works for GTF files)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 22,
            "key": "sjdbGTFtagExonParentGene",
            "map_key": "--sjdbGTFtagExonParentGene",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbGTFtagExonParentGene",
            "display_name_cn": "sjdbGTFtagExonParentGene",
            "description_en": "GTF attribute name for parent gene ID (default \"gene_id\" works for GTF files)",
            "description_cn": "GTF attribute name for parent gene ID (default \"gene_id\" works for GTF files)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 23,
            "key": "sjdbGTFtagExonParentGeneName",
            "map_key": "--sjdbGTFtagExonParentGeneName",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbGTFtagExonParentGeneName",
            "display_name_cn": "sjdbGTFtagExonParentGeneName",
            "description_en": "GTF attrbute name for parent gene name",
            "description_cn": "GTF attrbute name for parent gene name",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 24,
            "key": "sjdbGTFtagExonParentGeneType",
            "map_key": "--sjdbGTFtagExonParentGeneType",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbGTFtagExonParentGeneType",
            "display_name_cn": "sjdbGTFtagExonParentGeneType",
            "description_en": "GTF attrbute name for parent gene type",
            "description_cn": "GTF attrbute name for parent gene type",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 25,
            "key": "sjdbOverhang",
            "map_key": "--sjdbOverhang",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbOverhang",
            "display_name_cn": "sjdbOverhang",
            "description_en": "length of the donor/acceptor sequence on each side of the junctions, ideally = (mate_length - 1)",
            "description_cn": "length of the donor/acceptor sequence on each side of the junctions, ideally = (mate_length - 1)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 26,
            "key": "sjdbScore",
            "map_key": "--sjdbScore",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbScore",
            "display_name_cn": "sjdbScore",
            "description_en": "extra alignment score for alignments that cross database junctions",
            "description_cn": "extra alignment score for alignments that cross database junctions",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 27,
            "key": "sjdbInsertSave",
            "map_key": "--sjdbInsertSave",
            "type": "String",
            "required": false,
            "display_name_en": "sjdbInsertSave",
            "display_name_cn": "sjdbInsertSave",
            "description_en": "which files to save when sjdb junctions are inserted on the fly at the mapping step",
            "description_cn": "which files to save when sjdb junctions are inserted on the fly at the mapping step",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 28,
            "key": "varVCFfile",
            "map_key": "--varVCFfile",
            "type": "String",
            "required": false,
            "display_name_en": "varVCFfile",
            "display_name_cn": "varVCFfile",
            "description_en": "path to the VCF file that contains variation data. The 10th column should contain the genotype information, e.g. 0/1",
            "description_cn": "path to the VCF file that contains variation data. The 10th column should contain the genotype information, e.g. 0/1",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 29,
            "key": "inputBAMfile",
            "map_key": "--inputBAMfile",
            "type": "String",
            "required": false,
            "display_name_en": "inputBAMfile",
            "display_name_cn": "inputBAMfile",
            "description_en": "path to BAM input file, to be used with --runMode inputAlignmentsFromBAM",
            "description_cn": "path to BAM input file, to be used with --runMode inputAlignmentsFromBAM",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 30,
            "key": "readFilesType",
            "map_key": "--readFilesType",
            "type": "String",
            "required": false,
            "display_name_en": "readFilesType",
            "display_name_cn": "readFilesType",
            "description_en": "format of input read files",
            "description_cn": "format of input read files",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 31,
            "key": "readFilesIn",
            "map_key": "--readFilesIn",
            "type": "String",
            "required": false,
            "display_name_en": "readFilesIn",
            "display_name_cn": "readFilesIn",
            "description_en": "paths to files that contain input read1 (and, if needed,  read2)",
            "description_cn": "paths to files that contain input read1 (and, if needed,  read2)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 32,
            "key": "readFilesManifest",
            "map_key": "--readFilesManifest",
            "type": "String",
            "required": false,
            "display_name_en": "readFilesManifest",
            "display_name_cn": "readFilesManifest",
            "description_en": "path to the \"manifest\" file with the names of read files. The manifest file should contain 3 tab-separated columns:",
            "description_cn": "path to the \"manifest\" file with the names of read files. The manifest file should contain 3 tab-separated columns:",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 33,
            "key": "readFilesPrefix",
            "map_key": "--readFilesPrefix",
            "type": "String",
            "required": false,
            "display_name_en": "readFilesPrefix",
            "display_name_cn": "readFilesPrefix",
            "description_en": "prefix for the read files names, i.e. it will be added in front of the strings in --readFilesIn",
            "description_cn": "prefix for the read files names, i.e. it will be added in front of the strings in --readFilesIn",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 34,
            "key": "readFilesCommand",
            "map_key": "--readFilesCommand",
            "type": "String",
            "required": false,
            "display_name_en": "readFilesCommand",
            "display_name_cn": "readFilesCommand",
            "description_en": "command line to execute for each of the input file. This command should generate FASTA or FASTQ text and send it to stdout",
            "description_cn": "command line to execute for each of the input file. This command should generate FASTA or FASTQ text and send it to stdout",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 35,
            "key": "readMapNumber",
            "map_key": "--readMapNumber",
            "type": "String",
            "required": false,
            "display_name_en": "readMapNumber",
            "display_name_cn": "readMapNumber",
            "description_en": "number of reads to map from the beginning of the file",
            "description_cn": "number of reads to map from the beginning of the file",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 36,
            "key": "readMatesLengthsIn",
            "map_key": "--readMatesLengthsIn",
            "type": "String",
            "required": false,
            "display_name_en": "readMatesLengthsIn",
            "display_name_cn": "readMatesLengthsIn",
            "description_en": "Equal/NotEqual - lengths of names,sequences,qualities for both mates are the same  / not the same. NotEqual is safe in all situations.",
            "description_cn": "Equal/NotEqual - lengths of names,sequences,qualities for both mates are the same  / not the same. NotEqual is safe in all situations.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 37,
            "key": "readNameSeparator",
            "map_key": "--readNameSeparator",
            "type": "String",
            "required": false,
            "display_name_en": "readNameSeparator",
            "display_name_cn": "readNameSeparator",
            "description_en": "character(s) separating the part of the read names that will be trimmed in output (read name after space is always trimmed)",
            "description_cn": "character(s) separating the part of the read names that will be trimmed in output (read name after space is always trimmed)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 38,
            "key": "readQualityScoreBase",
            "map_key": "--readQualityScoreBase",
            "type": "String",
            "required": false,
            "display_name_en": "readQualityScoreBase",
            "display_name_cn": "readQualityScoreBase",
            "description_en": "number to be subtracted from the ASCII code to get Phred quality score",
            "description_cn": "number to be subtracted from the ASCII code to get Phred quality score",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 39,
            "key": "clip3pNbases",
            "map_key": "--clip3pNbases",
            "type": "String",
            "required": false,
            "display_name_en": "clip3pNbases",
            "display_name_cn": "clip3pNbases",
            "description_en": "number(s) of bases to clip from 3p of each mate. If one value is given, it will be assumed the same for both mates.",
            "description_cn": "number(s) of bases to clip from 3p of each mate. If one value is given, it will be assumed the same for both mates.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 40,
            "key": "clip5pNbases",
            "map_key": "--clip5pNbases",
            "type": "String",
            "required": false,
            "display_name_en": "clip5pNbases",
            "display_name_cn": "clip5pNbases",
            "description_en": "number(s) of bases to clip from 5p of each mate. If one value is given, it will be assumed the same for both mates.",
            "description_cn": "number(s) of bases to clip from 5p of each mate. If one value is given, it will be assumed the same for both mates.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 41,
            "key": "clip3pAdapterSeq",
            "map_key": "--clip3pAdapterSeq",
            "type": "String",
            "required": false,
            "display_name_en": "clip3pAdapterSeq",
            "display_name_cn": "clip3pAdapterSeq",
            "description_en": "adapter sequences to clip from 3p of each mate.  If one value is given, it will be assumed the same for both mates.",
            "description_cn": "adapter sequences to clip from 3p of each mate.  If one value is given, it will be assumed the same for both mates.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 42,
            "key": "clip3pAdapterMMp",
            "map_key": "--clip3pAdapterMMp",
            "type": "String",
            "required": false,
            "display_name_en": "clip3pAdapterMMp",
            "display_name_cn": "clip3pAdapterMMp",
            "description_en": "max proportion of mismatches for 3p adapter clipping for each mate.  If one value is given, it will be assumed the same for both mates.",
            "description_cn": "max proportion of mismatches for 3p adapter clipping for each mate.  If one value is given, it will be assumed the same for both mates.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 43,
            "key": "clip3pAfterAdapterNbases",
            "map_key": "--clip3pAfterAdapterNbases",
            "type": "String",
            "required": false,
            "display_name_en": "clip3pAfterAdapterNbases",
            "display_name_cn": "clip3pAfterAdapterNbases",
            "description_en": "number of bases to clip from 3p of each mate after the adapter clipping. If one value is given, it will be assumed the same for both mates.",
            "description_cn": "number of bases to clip from 3p of each mate after the adapter clipping. If one value is given, it will be assumed the same for both mates.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 44,
            "key": "limitGenomeGenerateRAM",
            "map_key": "--limitGenomeGenerateRAM",
            "type": "String",
            "required": false,
            "display_name_en": "limitGenomeGenerateRAM",
            "display_name_cn": "limitGenomeGenerateRAM",
            "description_en": "maximum available RAM (bytes) for genome generation",
            "description_cn": "maximum available RAM (bytes) for genome generation",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 45,
            "key": "limitIObufferSize",
            "map_key": "--limitIObufferSize",
            "type": "String",
            "required": false,
            "display_name_en": "limitIObufferSize",
            "display_name_cn": "limitIObufferSize",
            "description_en": "max available buffers size (bytes) for input/output, per thread",
            "description_cn": "max available buffers size (bytes) for input/output, per thread",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 46,
            "key": "limitOutSAMoneReadBytes",
            "map_key": "--limitOutSAMoneReadBytes",
            "type": "String",
            "required": false,
            "display_name_en": "limitOutSAMoneReadBytes",
            "display_name_cn": "limitOutSAMoneReadBytes",
            "description_en": "max size of the SAM record (bytes) for one read. Recommended value: >(2*(LengthMate1+LengthMate2+100)*outFilterMultimapNmax",
            "description_cn": "max size of the SAM record (bytes) for one read. Recommended value: >(2*(LengthMate1+LengthMate2+100)*outFilterMultimapNmax",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 47,
            "key": "limitOutSJoneRead",
            "map_key": "--limitOutSJoneRead",
            "type": "String",
            "required": false,
            "display_name_en": "limitOutSJoneRead",
            "display_name_cn": "limitOutSJoneRead",
            "description_en": "max number of junctions for one read (including all multi-mappers)",
            "description_cn": "max number of junctions for one read (including all multi-mappers)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 48,
            "key": "limitOutSJcollapsed",
            "map_key": "--limitOutSJcollapsed",
            "type": "String",
            "required": false,
            "display_name_en": "limitOutSJcollapsed",
            "display_name_cn": "limitOutSJcollapsed",
            "description_en": "max number of collapsed junctions",
            "description_cn": "max number of collapsed junctions",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 49,
            "key": "limitBAMsortRAM",
            "map_key": "--limitBAMsortRAM",
            "type": "String",
            "required": false,
            "display_name_en": "limitBAMsortRAM",
            "display_name_cn": "limitBAMsortRAM",
            "description_en": "maximum available RAM (bytes) for sorting BAM. If =0, it will be set to the genome index size. 0 value can only be used with --genomeLoad NoSharedMemory option.",
            "description_cn": "maximum available RAM (bytes) for sorting BAM. If =0, it will be set to the genome index size. 0 value can only be used with --genomeLoad NoSharedMemory option.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 50,
            "key": "limitSjdbInsertNsj",
            "map_key": "--limitSjdbInsertNsj",
            "type": "String",
            "required": false,
            "display_name_en": "limitSjdbInsertNsj",
            "display_name_cn": "limitSjdbInsertNsj",
            "description_en": "maximum number of junction to be inserted to the genome on the fly at the mapping stage, including those from annotations and those detected in the 1st step of the 2-pass run",
            "description_cn": "maximum number of junction to be inserted to the genome on the fly at the mapping stage, including those from annotations and those detected in the 1st step of the 2-pass run",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 51,
            "key": "limitNreadsSoft",
            "map_key": "--limitNreadsSoft",
            "type": "String",
            "required": false,
            "display_name_en": "limitNreadsSoft",
            "display_name_cn": "limitNreadsSoft",
            "description_en": "soft limit on the number of reads",
            "description_cn": "soft limit on the number of reads",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 52,
            "key": "outFileNamePrefix",
            "map_key": "--outFileNamePrefix",
            "type": "String",
            "required": false,
            "display_name_en": "outFileNamePrefix",
            "display_name_cn": "outFileNamePrefix",
            "description_en": "output files name prefix (including full or relative path). Can only be defined on the command line.",
            "description_cn": "output files name prefix (including full or relative path). Can only be defined on the command line.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 53,
            "key": "outTmpDir",
            "map_key": "--outTmpDir",
            "type": "String",
            "required": false,
            "display_name_en": "outTmpDir",
            "display_name_cn": "outTmpDir",
            "description_en": "path to a directory that will be used as temporary by STAR. All contents of this directory will be removed!",
            "description_cn": "path to a directory that will be used as temporary by STAR. All contents of this directory will be removed!",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 54,
            "key": "outTmpKeep",
            "map_key": "--outTmpKeep",
            "type": "String",
            "required": false,
            "display_name_en": "outTmpKeep",
            "display_name_cn": "outTmpKeep",
            "description_en": "whether to keep the tempporary files after STAR runs is finished",
            "description_cn": "whether to keep the tempporary files after STAR runs is finished",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 55,
            "key": "outStd",
            "map_key": "--outStd",
            "type": "String",
            "required": false,
            "display_name_en": "outStd",
            "display_name_cn": "outStd",
            "description_en": "which output will be directed to stdout (standard out)",
            "description_cn": "which output will be directed to stdout (standard out)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 56,
            "key": "outReadsUnmapped",
            "map_key": "--outReadsUnmapped",
            "type": "String",
            "required": false,
            "display_name_en": "outReadsUnmapped",
            "display_name_cn": "outReadsUnmapped",
            "description_en": "output of unmapped and partially mapped (i.e. mapped only one mate of a paired end read) reads in separate file(s).",
            "description_cn": "output of unmapped and partially mapped (i.e. mapped only one mate of a paired end read) reads in separate file(s).",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 57,
            "key": "outQSconversionAdd",
            "map_key": "--outQSconversionAdd",
            "type": "String",
            "required": false,
            "display_name_en": "outQSconversionAdd",
            "display_name_cn": "outQSconversionAdd",
            "description_en": "add this number to the quality score (e.g. to convert from Illumina to Sanger, use -31)",
            "description_cn": "add this number to the quality score (e.g. to convert from Illumina to Sanger, use -31)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 58,
            "key": "outMultimapperOrder",
            "map_key": "--outMultimapperOrder",
            "type": "String",
            "required": false,
            "display_name_en": "outMultimapperOrder",
            "display_name_cn": "outMultimapperOrder",
            "description_en": "order of multimapping alignments in the output files",
            "description_cn": "order of multimapping alignments in the output files",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 59,
            "key": "outSAMtype",
            "map_key": "--outSAMtype",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMtype",
            "display_name_cn": "outSAMtype",
            "description_en": "type of SAM/BAM output",
            "description_cn": "type of SAM/BAM output",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 60,
            "key": "outSAMmode",
            "map_key": "--outSAMmode",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMmode",
            "display_name_cn": "outSAMmode",
            "description_en": "mode of SAM output",
            "description_cn": "mode of SAM output",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 61,
            "key": "outSAMstrandField",
            "map_key": "--outSAMstrandField",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMstrandField",
            "display_name_cn": "outSAMstrandField",
            "description_en": "Cufflinks-like strand field flag",
            "description_cn": "Cufflinks-like strand field flag",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 62,
            "key": "outSAMattributes",
            "map_key": "--outSAMattributes",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMattributes",
            "display_name_cn": "outSAMattributes",
            "description_en": "a string of desired SAM attributes, in the order desired for the output SAM. Tags can be listed in any combination/order.",
            "description_cn": "a string of desired SAM attributes, in the order desired for the output SAM. Tags can be listed in any combination/order.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 63,
            "key": "outSAMattrIHstart",
            "map_key": "--outSAMattrIHstart",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMattrIHstart",
            "display_name_cn": "outSAMattrIHstart",
            "description_en": "start value for the IH attribute. 0 may be required by some downstream software, such as Cufflinks or StringTie.",
            "description_cn": "start value for the IH attribute. 0 may be required by some downstream software, such as Cufflinks or StringTie.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 64,
            "key": "outSAMunmapped",
            "map_key": "--outSAMunmapped",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMunmapped",
            "display_name_cn": "outSAMunmapped",
            "description_en": "output of unmapped reads in the SAM format",
            "description_cn": "output of unmapped reads in the SAM format",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 65,
            "key": "outSAMorder",
            "map_key": "--outSAMorder",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMorder",
            "display_name_cn": "outSAMorder",
            "description_en": "type of sorting for the SAM output",
            "description_cn": "type of sorting for the SAM output",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 66,
            "key": "outSAMprimaryFlag",
            "map_key": "--outSAMprimaryFlag",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMprimaryFlag",
            "display_name_cn": "outSAMprimaryFlag",
            "description_en": "which alignments are considered primary - all others will be marked with 0x100 bit in the FLAG",
            "description_cn": "which alignments are considered primary - all others will be marked with 0x100 bit in the FLAG",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 67,
            "key": "outSAMreadID",
            "map_key": "--outSAMreadID",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMreadID",
            "display_name_cn": "outSAMreadID",
            "description_en": "read ID record type",
            "description_cn": "read ID record type",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 68,
            "key": "outSAMmapqUnique",
            "map_key": "--outSAMmapqUnique",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMmapqUnique",
            "display_name_cn": "outSAMmapqUnique",
            "description_en": "0 to 255: the MAPQ value for unique mappers",
            "description_cn": "0 to 255: the MAPQ value for unique mappers",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 69,
            "key": "outSAMflagOR",
            "map_key": "--outSAMflagOR",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMflagOR",
            "display_name_cn": "outSAMflagOR",
            "description_en": "0 to 65535: sam FLAG will be bitwise OR'd with this value, i.e. FLAG=FLAG | outSAMflagOR. This is applied after all flags have been set by STAR, and after outSAMflagAND. Can be used to set specific bits that are not set otherwise.",
            "description_cn": "0 to 65535: sam FLAG will be bitwise OR'd with this value, i.e. FLAG=FLAG | outSAMflagOR. This is applied after all flags have been set by STAR, and after outSAMflagAND. Can be used to set specific bits that are not set otherwise.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 70,
            "key": "outSAMflagAND",
            "map_key": "--outSAMflagAND",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMflagAND",
            "display_name_cn": "outSAMflagAND",
            "description_en": "0 to 65535: sam FLAG will be bitwise AND'd with this value, i.e. FLAG=FLAG & outSAMflagOR. This is applied after all flags have been set by STAR, but before outSAMflagOR. Can be used to unset specific bits that are not set otherwise.",
            "description_cn": "0 to 65535: sam FLAG will be bitwise AND'd with this value, i.e. FLAG=FLAG & outSAMflagOR. This is applied after all flags have been set by STAR, but before outSAMflagOR. Can be used to unset specific bits that are not set otherwise.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 71,
            "key": "outSAMattrRGline",
            "map_key": "--outSAMattrRGline",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMattrRGline",
            "display_name_cn": "outSAMattrRGline",
            "description_en": "SAM/BAM read group line. The first word contains the read group identifier and must start with \"ID:\", e.g. --outSAMattrRGline ID:xxx CN:yy \"DS:z z z\".",
            "description_cn": "SAM/BAM read group line. The first word contains the read group identifier and must start with \"ID:\", e.g. --outSAMattrRGline ID:xxx CN:yy \"DS:z z z\".",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 72,
            "key": "outSAMheaderHD",
            "map_key": "--outSAMheaderHD",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMheaderHD",
            "display_name_cn": "outSAMheaderHD",
            "description_en": "@HD (header) line of the SAM header",
            "description_cn": "@HD (header) line of the SAM header",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 73,
            "key": "outSAMheaderPG",
            "map_key": "--outSAMheaderPG",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMheaderPG",
            "display_name_cn": "outSAMheaderPG",
            "description_en": "extra @PG (software) line of the SAM header (in addition to STAR)",
            "description_cn": "extra @PG (software) line of the SAM header (in addition to STAR)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 74,
            "key": "outSAMheaderCommentFile",
            "map_key": "--outSAMheaderCommentFile",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMheaderCommentFile",
            "display_name_cn": "outSAMheaderCommentFile",
            "description_en": "path to the file with @CO (comment) lines of the SAM header",
            "description_cn": "path to the file with @CO (comment) lines of the SAM header",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 75,
            "key": "outSAMfilter",
            "map_key": "--outSAMfilter",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMfilter",
            "display_name_cn": "outSAMfilter",
            "description_en": "filter the output into main SAM/BAM files",
            "description_cn": "filter the output into main SAM/BAM files",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 76,
            "key": "outSAMmultNmax",
            "map_key": "--outSAMmultNmax",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMmultNmax",
            "display_name_cn": "outSAMmultNmax",
            "description_en": "max number of multiple alignments for a read that will be output to the SAM/BAM files. Note that if this value is not equal to -1, the top scoring alignment will be output first",
            "description_cn": "max number of multiple alignments for a read that will be output to the SAM/BAM files. Note that if this value is not equal to -1, the top scoring alignment will be output first",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 77,
            "key": "outSAMtlen",
            "map_key": "--outSAMtlen",
            "type": "String",
            "required": false,
            "display_name_en": "outSAMtlen",
            "display_name_cn": "outSAMtlen",
            "description_en": "calculation method for the TLEN field in the SAM/BAM files",
            "description_cn": "calculation method for the TLEN field in the SAM/BAM files",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 78,
            "key": "outBAMcompression",
            "map_key": "--outBAMcompression",
            "type": "String",
            "required": false,
            "display_name_en": "outBAMcompression",
            "display_name_cn": "outBAMcompression",
            "description_en": "-1 to 10  BAM compression level, -1=default compression (6?), 0=no compression, 10=maximum compression",
            "description_cn": "-1 to 10  BAM compression level, -1=default compression (6?), 0=no compression, 10=maximum compression",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 79,
            "key": "outBAMsortingThreadN",
            "map_key": "--outBAMsortingThreadN",
            "type": "String",
            "required": false,
            "display_name_en": "outBAMsortingThreadN",
            "display_name_cn": "outBAMsortingThreadN",
            "description_en": ">=0: number of threads for BAM sorting. 0 will default to min(6,--runThreadN).",
            "description_cn": ">=0: number of threads for BAM sorting. 0 will default to min(6,--runThreadN).",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 80,
            "key": "outBAMsortingBinsN",
            "map_key": "--outBAMsortingBinsN",
            "type": "String",
            "required": false,
            "display_name_en": "outBAMsortingBinsN",
            "display_name_cn": "outBAMsortingBinsN",
            "description_en": ">0:  number of genome bins fo coordinate-sorting",
            "description_cn": ">0:  number of genome bins fo coordinate-sorting",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 81,
            "key": "bamRemoveDuplicatesType",
            "map_key": "--bamRemoveDuplicatesType",
            "type": "String",
            "required": false,
            "display_name_en": "bamRemoveDuplicatesType",
            "display_name_cn": "bamRemoveDuplicatesType",
            "description_en": "mark duplicates in the BAM file, for now only works with (i) sorted BAM fed with inputBAMfile, and (ii) for paired-end alignments only",
            "description_cn": "mark duplicates in the BAM file, for now only works with (i) sorted BAM fed with inputBAMfile, and (ii) for paired-end alignments only",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 82,
            "key": "bamRemoveDuplicatesMate2basesN",
            "map_key": "--bamRemoveDuplicatesMate2basesN",
            "type": "String",
            "required": false,
            "display_name_en": "bamRemoveDuplicatesMate2basesN",
            "display_name_cn": "bamRemoveDuplicatesMate2basesN",
            "description_en": "number of bases from the 5' of mate 2 to use in collapsing (e.g. for RAMPAGE)",
            "description_cn": "number of bases from the 5' of mate 2 to use in collapsing (e.g. for RAMPAGE)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 83,
            "key": "outWigType",
            "map_key": "--outWigType",
            "type": "String",
            "required": false,
            "display_name_en": "outWigType",
            "display_name_cn": "outWigType",
            "description_en": "type of signal output, e.g. \"bedGraph\" OR \"bedGraph read1_5p\". Requires sorted BAM: --outSAMtype BAM SortedByCoordinate .",
            "description_cn": "type of signal output, e.g. \"bedGraph\" OR \"bedGraph read1_5p\". Requires sorted BAM: --outSAMtype BAM SortedByCoordinate .",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 84,
            "key": "outWigStrand",
            "map_key": "--outWigStrand",
            "type": "String",
            "required": false,
            "display_name_en": "outWigStrand",
            "display_name_cn": "outWigStrand",
            "description_en": "strandedness of wiggle/bedGraph output",
            "description_cn": "strandedness of wiggle/bedGraph output",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 85,
            "key": "outWigReferencesPrefix",
            "map_key": "--outWigReferencesPrefix",
            "type": "String",
            "required": false,
            "display_name_en": "outWigReferencesPrefix",
            "display_name_cn": "outWigReferencesPrefix",
            "description_en": "prefix matching reference names to include in the output wiggle file, e.g. \"chr\", default \"-\" - include all references",
            "description_cn": "prefix matching reference names to include in the output wiggle file, e.g. \"chr\", default \"-\" - include all references",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 86,
            "key": "outWigNorm",
            "map_key": "--outWigNorm",
            "type": "String",
            "required": false,
            "display_name_en": "outWigNorm",
            "display_name_cn": "outWigNorm",
            "description_en": "type of normalization for the signal",
            "description_cn": "type of normalization for the signal",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 87,
            "key": "outFilterType",
            "map_key": "--outFilterType",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterType",
            "display_name_cn": "outFilterType",
            "description_en": "type of filtering",
            "description_cn": "type of filtering",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 88,
            "key": "outFilterMultimapScoreRange",
            "map_key": "--outFilterMultimapScoreRange",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterMultimapScoreRange",
            "display_name_cn": "outFilterMultimapScoreRange",
            "description_en": "the score range below the maximum score for multimapping alignments",
            "description_cn": "the score range below the maximum score for multimapping alignments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 89,
            "key": "outFilterMultimapNmax",
            "map_key": "--outFilterMultimapNmax",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterMultimapNmax",
            "display_name_cn": "outFilterMultimapNmax",
            "description_en": "maximum number of loci the read is allowed to map to. Alignments (all of them) will be output only if the read maps to no more loci than this value.",
            "description_cn": "maximum number of loci the read is allowed to map to. Alignments (all of them) will be output only if the read maps to no more loci than this value.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 90,
            "key": "outFilterMismatchNmax",
            "map_key": "--outFilterMismatchNmax",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterMismatchNmax",
            "display_name_cn": "outFilterMismatchNmax",
            "description_en": "alignment will be output only if it has no more mismatches than this value.",
            "description_cn": "alignment will be output only if it has no more mismatches than this value.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 91,
            "key": "outFilterMismatchNoverLmax",
            "map_key": "--outFilterMismatchNoverLmax",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterMismatchNoverLmax",
            "display_name_cn": "outFilterMismatchNoverLmax",
            "description_en": "alignment will be output only if its ratio of mismatches to *mapped* length is less than or equal to this value.",
            "description_cn": "alignment will be output only if its ratio of mismatches to *mapped* length is less than or equal to this value.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 92,
            "key": "outFilterMismatchNoverReadLmax",
            "map_key": "--outFilterMismatchNoverReadLmax",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterMismatchNoverReadLmax",
            "display_name_cn": "outFilterMismatchNoverReadLmax",
            "description_en": "alignment will be output only if its ratio of mismatches to *read* length is less than or equal to this value.",
            "description_cn": "alignment will be output only if its ratio of mismatches to *read* length is less than or equal to this value.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 93,
            "key": "outFilterScoreMin",
            "map_key": "--outFilterScoreMin",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterScoreMin",
            "display_name_cn": "outFilterScoreMin",
            "description_en": "alignment will be output only if its score is higher than or equal to this value.",
            "description_cn": "alignment will be output only if its score is higher than or equal to this value.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 94,
            "key": "outFilterScoreMinOverLread",
            "map_key": "--outFilterScoreMinOverLread",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterScoreMinOverLread",
            "display_name_cn": "outFilterScoreMinOverLread",
            "description_en": "same as outFilterScoreMin, but  normalized to read length (sum of mates' lengths for paired-end reads)",
            "description_cn": "same as outFilterScoreMin, but  normalized to read length (sum of mates' lengths for paired-end reads)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 95,
            "key": "outFilterMatchNmin",
            "map_key": "--outFilterMatchNmin",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterMatchNmin",
            "display_name_cn": "outFilterMatchNmin",
            "description_en": "alignment will be output only if the number of matched bases is higher than or equal to this value.",
            "description_cn": "alignment will be output only if the number of matched bases is higher than or equal to this value.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 96,
            "key": "outFilterMatchNminOverLread",
            "map_key": "--outFilterMatchNminOverLread",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterMatchNminOverLread",
            "display_name_cn": "outFilterMatchNminOverLread",
            "description_en": "sam as outFilterMatchNmin, but normalized to the read length (sum of mates' lengths for paired-end reads).",
            "description_cn": "sam as outFilterMatchNmin, but normalized to the read length (sum of mates' lengths for paired-end reads).",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 97,
            "key": "outFilterIntronMotifs",
            "map_key": "--outFilterIntronMotifs",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterIntronMotifs",
            "display_name_cn": "outFilterIntronMotifs",
            "description_en": "filter alignment using their motifs",
            "description_cn": "filter alignment using their motifs",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 98,
            "key": "outFilterIntronStrands",
            "map_key": "--outFilterIntronStrands",
            "type": "String",
            "required": false,
            "display_name_en": "outFilterIntronStrands",
            "display_name_cn": "outFilterIntronStrands",
            "description_en": "filter alignments",
            "description_cn": "filter alignments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 99,
            "key": "outSJfilterReads",
            "map_key": "--outSJfilterReads",
            "type": "String",
            "required": false,
            "display_name_en": "outSJfilterReads",
            "display_name_cn": "outSJfilterReads",
            "description_en": "which reads to consider for collapsed splice junctions output",
            "description_cn": "which reads to consider for collapsed splice junctions output",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 100,
            "key": "outSJfilterOverhangMin",
            "map_key": "--outSJfilterOverhangMin",
            "type": "String",
            "required": false,
            "display_name_en": "outSJfilterOverhangMin",
            "display_name_cn": "outSJfilterOverhangMin",
            "description_en": "minimum overhang length for splice junctions on both sides for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif",
            "description_cn": "minimum overhang length for splice junctions on both sides for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 101,
            "key": "outSJfilterCountUniqueMin",
            "map_key": "--outSJfilterCountUniqueMin",
            "type": "String",
            "required": false,
            "display_name_en": "outSJfilterCountUniqueMin",
            "display_name_cn": "outSJfilterCountUniqueMin",
            "description_en": "minimum uniquely mapping read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif",
            "description_cn": "minimum uniquely mapping read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 102,
            "key": "outSJfilterCountTotalMin",
            "map_key": "--outSJfilterCountTotalMin",
            "type": "String",
            "required": false,
            "display_name_en": "outSJfilterCountTotalMin",
            "display_name_cn": "outSJfilterCountTotalMin",
            "description_en": "minimum total (multi-mapping+unique) read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif",
            "description_cn": "minimum total (multi-mapping+unique) read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 103,
            "key": "outSJfilterDistToOtherSJmin",
            "map_key": "--outSJfilterDistToOtherSJmin",
            "type": "String",
            "required": false,
            "display_name_en": "outSJfilterDistToOtherSJmin",
            "display_name_cn": "outSJfilterDistToOtherSJmin",
            "description_en": "minimum allowed distance to other junctions' donor/acceptor",
            "description_cn": "minimum allowed distance to other junctions' donor/acceptor",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 104,
            "key": "outSJfilterIntronMaxVsReadN",
            "map_key": "--outSJfilterIntronMaxVsReadN",
            "type": "String",
            "required": false,
            "display_name_en": "outSJfilterIntronMaxVsReadN",
            "display_name_cn": "outSJfilterIntronMaxVsReadN",
            "description_en": "maximum gap allowed for junctions supported by 1,2,3,,,N reads",
            "description_cn": "maximum gap allowed for junctions supported by 1,2,3,,,N reads",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 105,
            "key": "scoreGap",
            "map_key": "--scoreGap",
            "type": "String",
            "required": false,
            "display_name_en": "scoreGap",
            "display_name_cn": "scoreGap",
            "description_en": "splice junction penalty (independent on intron motif)",
            "description_cn": "splice junction penalty (independent on intron motif)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 106,
            "key": "scoreGapNoncan",
            "map_key": "--scoreGapNoncan",
            "type": "String",
            "required": false,
            "display_name_en": "scoreGapNoncan",
            "display_name_cn": "scoreGapNoncan",
            "description_en": "non-canonical junction penalty (in addition to scoreGap)",
            "description_cn": "non-canonical junction penalty (in addition to scoreGap)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 107,
            "key": "scoreGapGCAG",
            "map_key": "--scoreGapGCAG",
            "type": "String",
            "required": false,
            "display_name_en": "scoreGapGCAG",
            "display_name_cn": "scoreGapGCAG",
            "description_en": "GC/AG and CT/GC junction penalty (in addition to scoreGap)",
            "description_cn": "GC/AG and CT/GC junction penalty (in addition to scoreGap)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 108,
            "key": "scoreGapATAC",
            "map_key": "--scoreGapATAC",
            "type": "String",
            "required": false,
            "display_name_en": "scoreGapATAC",
            "display_name_cn": "scoreGapATAC",
            "description_en": "AT/AC  and GT/AT junction penalty  (in addition to scoreGap)",
            "description_cn": "AT/AC  and GT/AT junction penalty  (in addition to scoreGap)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 109,
            "key": "scoreGenomicLengthLog2scale",
            "map_key": "--scoreGenomicLengthLog2scale",
            "type": "String",
            "required": false,
            "display_name_en": "scoreGenomicLengthLog2scale",
            "display_name_cn": "scoreGenomicLengthLog2scale",
            "description_en": "scoreGenomicLengthLog2scale*log2(genomicLength)",
            "description_cn": "scoreGenomicLengthLog2scale*log2(genomicLength)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 110,
            "key": "scoreDelOpen",
            "map_key": "--scoreDelOpen",
            "type": "String",
            "required": false,
            "display_name_en": "scoreDelOpen",
            "display_name_cn": "scoreDelOpen",
            "description_en": "deletion open penalty",
            "description_cn": "deletion open penalty",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 111,
            "key": "scoreDelBase",
            "map_key": "--scoreDelBase",
            "type": "String",
            "required": false,
            "display_name_en": "scoreDelBase",
            "display_name_cn": "scoreDelBase",
            "description_en": "deletion extension penalty per base (in addition to scoreDelOpen)",
            "description_cn": "deletion extension penalty per base (in addition to scoreDelOpen)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 112,
            "key": "scoreInsOpen",
            "map_key": "--scoreInsOpen",
            "type": "String",
            "required": false,
            "display_name_en": "scoreInsOpen",
            "display_name_cn": "scoreInsOpen",
            "description_en": "insertion open penalty",
            "description_cn": "insertion open penalty",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 113,
            "key": "scoreInsBase",
            "map_key": "--scoreInsBase",
            "type": "String",
            "required": false,
            "display_name_en": "scoreInsBase",
            "display_name_cn": "scoreInsBase",
            "description_en": "insertion extension penalty per base (in addition to scoreInsOpen)",
            "description_cn": "insertion extension penalty per base (in addition to scoreInsOpen)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 114,
            "key": "scoreStitchSJshift",
            "map_key": "--scoreStitchSJshift",
            "type": "String",
            "required": false,
            "display_name_en": "scoreStitchSJshift",
            "display_name_cn": "scoreStitchSJshift",
            "description_en": "maximum score reduction while searching for SJ boundaries in the stitching step",
            "description_cn": "maximum score reduction while searching for SJ boundaries in the stitching step",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 115,
            "key": "seedSearchStartLmax",
            "map_key": "--seedSearchStartLmax",
            "type": "String",
            "required": false,
            "display_name_en": "seedSearchStartLmax",
            "display_name_cn": "seedSearchStartLmax",
            "description_en": "defines the search start point through the read - the read is split into pieces no longer than this value",
            "description_cn": "defines the search start point through the read - the read is split into pieces no longer than this value",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 116,
            "key": "seedSearchStartLmaxOverLread",
            "map_key": "--seedSearchStartLmaxOverLread",
            "type": "String",
            "required": false,
            "display_name_en": "seedSearchStartLmaxOverLread",
            "display_name_cn": "seedSearchStartLmaxOverLread",
            "description_en": "seedSearchStartLmax normalized to read length (sum of mates' lengths for paired-end reads)",
            "description_cn": "seedSearchStartLmax normalized to read length (sum of mates' lengths for paired-end reads)",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 117,
            "key": "seedSearchLmax",
            "map_key": "--seedSearchLmax",
            "type": "String",
            "required": false,
            "display_name_en": "seedSearchLmax",
            "display_name_cn": "seedSearchLmax",
            "description_en": "defines the maximum length of the seeds, if =0 seed length is not limited",
            "description_cn": "defines the maximum length of the seeds, if =0 seed length is not limited",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 118,
            "key": "seedMultimapNmax",
            "map_key": "--seedMultimapNmax",
            "type": "String",
            "required": false,
            "display_name_en": "seedMultimapNmax",
            "display_name_cn": "seedMultimapNmax",
            "description_en": "only pieces that map fewer than this value are utilized in the stitching procedure",
            "description_cn": "only pieces that map fewer than this value are utilized in the stitching procedure",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 119,
            "key": "seedPerReadNmax",
            "map_key": "--seedPerReadNmax",
            "type": "String",
            "required": false,
            "display_name_en": "seedPerReadNmax",
            "display_name_cn": "seedPerReadNmax",
            "description_en": "max number of seeds per read",
            "description_cn": "max number of seeds per read",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 120,
            "key": "seedPerWindowNmax",
            "map_key": "--seedPerWindowNmax",
            "type": "String",
            "required": false,
            "display_name_en": "seedPerWindowNmax",
            "display_name_cn": "seedPerWindowNmax",
            "description_en": "max number of seeds per window",
            "description_cn": "max number of seeds per window",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 121,
            "key": "seedNoneLociPerWindow",
            "map_key": "--seedNoneLociPerWindow",
            "type": "String",
            "required": false,
            "display_name_en": "seedNoneLociPerWindow",
            "display_name_cn": "seedNoneLociPerWindow",
            "description_en": "max number of one seed loci per window",
            "description_cn": "max number of one seed loci per window",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 122,
            "key": "seedSplitMin",
            "map_key": "--seedSplitMin",
            "type": "String",
            "required": false,
            "display_name_en": "seedSplitMin",
            "display_name_cn": "seedSplitMin",
            "description_en": "min length of the seed sequences split by Ns or mate gap",
            "description_cn": "min length of the seed sequences split by Ns or mate gap",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 123,
            "key": "seedMapMin",
            "map_key": "--seedMapMin",
            "type": "String",
            "required": false,
            "display_name_en": "seedMapMin",
            "display_name_cn": "seedMapMin",
            "description_en": "min length of seeds to be mapped",
            "description_cn": "min length of seeds to be mapped",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 124,
            "key": "alignIntronMin",
            "map_key": "--alignIntronMin",
            "type": "String",
            "required": false,
            "display_name_en": "alignIntronMin",
            "display_name_cn": "alignIntronMin",
            "description_en": "genomic gap is considered intron if its length>=alignIntronMin, otherwise it is considered Deletion",
            "description_cn": "genomic gap is considered intron if its length>=alignIntronMin, otherwise it is considered Deletion",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 125,
            "key": "alignIntronMax",
            "map_key": "--alignIntronMax",
            "type": "String",
            "required": false,
            "display_name_en": "alignIntronMax",
            "display_name_cn": "alignIntronMax",
            "description_en": "maximum intron size, if 0, max intron size will be determined by (2^winBinNbits)*winAnchorDistNbins",
            "description_cn": "maximum intron size, if 0, max intron size will be determined by (2^winBinNbits)*winAnchorDistNbins",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 126,
            "key": "alignMatesGapMax",
            "map_key": "--alignMatesGapMax",
            "type": "String",
            "required": false,
            "display_name_en": "alignMatesGapMax",
            "display_name_cn": "alignMatesGapMax",
            "description_en": "maximum gap between two mates, if 0, max intron gap will be determined by (2^winBinNbits)*winAnchorDistNbins",
            "description_cn": "maximum gap between two mates, if 0, max intron gap will be determined by (2^winBinNbits)*winAnchorDistNbins",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 127,
            "key": "alignSJoverhangMin",
            "map_key": "--alignSJoverhangMin",
            "type": "String",
            "required": false,
            "display_name_en": "alignSJoverhangMin",
            "display_name_cn": "alignSJoverhangMin",
            "description_en": "minimum overhang (i.e. block size) for spliced alignments",
            "description_cn": "minimum overhang (i.e. block size) for spliced alignments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 128,
            "key": "alignSJstitchMismatchNmax",
            "map_key": "--alignSJstitchMismatchNmax",
            "type": "String",
            "required": false,
            "display_name_en": "alignSJstitchMismatchNmax",
            "display_name_cn": "alignSJstitchMismatchNmax",
            "description_en": "maximum number of mismatches for stitching of the splice junctions (-1: no limit).",
            "description_cn": "maximum number of mismatches for stitching of the splice junctions (-1: no limit).",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 129,
            "key": "alignSJDBoverhangMin",
            "map_key": "--alignSJDBoverhangMin",
            "type": "String",
            "required": false,
            "display_name_en": "alignSJDBoverhangMin",
            "display_name_cn": "alignSJDBoverhangMin",
            "description_en": "minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments",
            "description_cn": "minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 130,
            "key": "alignSplicedMateMapLmin",
            "map_key": "--alignSplicedMateMapLmin",
            "type": "String",
            "required": false,
            "display_name_en": "alignSplicedMateMapLmin",
            "display_name_cn": "alignSplicedMateMapLmin",
            "description_en": "minimum mapped length for a read mate that is spliced",
            "description_cn": "minimum mapped length for a read mate that is spliced",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 131,
            "key": "alignSplicedMateMapLminOverLmate",
            "map_key": "--alignSplicedMateMapLminOverLmate",
            "type": "String",
            "required": false,
            "display_name_en": "alignSplicedMateMapLminOverLmate",
            "display_name_cn": "alignSplicedMateMapLminOverLmate",
            "description_en": "alignSplicedMateMapLmin normalized to mate length",
            "description_cn": "alignSplicedMateMapLmin normalized to mate length",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 132,
            "key": "alignWindowsPerReadNmax",
            "map_key": "--alignWindowsPerReadNmax",
            "type": "String",
            "required": false,
            "display_name_en": "alignWindowsPerReadNmax",
            "display_name_cn": "alignWindowsPerReadNmax",
            "description_en": "max number of windows per read",
            "description_cn": "max number of windows per read",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 133,
            "key": "alignTranscriptsPerWindowNmax",
            "map_key": "--alignTranscriptsPerWindowNmax",
            "type": "String",
            "required": false,
            "display_name_en": "alignTranscriptsPerWindowNmax",
            "display_name_cn": "alignTranscriptsPerWindowNmax",
            "description_en": "max number of transcripts per window",
            "description_cn": "max number of transcripts per window",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 134,
            "key": "alignTranscriptsPerReadNmax",
            "map_key": "--alignTranscriptsPerReadNmax",
            "type": "String",
            "required": false,
            "display_name_en": "alignTranscriptsPerReadNmax",
            "display_name_cn": "alignTranscriptsPerReadNmax",
            "description_en": "max number of different alignments per read to consider",
            "description_cn": "max number of different alignments per read to consider",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 135,
            "key": "alignEndsType",
            "map_key": "--alignEndsType",
            "type": "String",
            "required": false,
            "display_name_en": "alignEndsType",
            "display_name_cn": "alignEndsType",
            "description_en": "type of read ends alignment",
            "description_cn": "type of read ends alignment",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 136,
            "key": "alignEndsProtrude",
            "map_key": "--alignEndsProtrude",
            "type": "String",
            "required": false,
            "display_name_en": "alignEndsProtrude",
            "display_name_cn": "alignEndsProtrude",
            "description_en": "allow protrusion of alignment ends, i.e. start (end) of the +strand mate downstream of the start (end) of the -strand mate",
            "description_cn": "allow protrusion of alignment ends, i.e. start (end) of the +strand mate downstream of the start (end) of the -strand mate",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 137,
            "key": "alignSoftClipAtReferenceEnds",
            "map_key": "--alignSoftClipAtReferenceEnds",
            "type": "String",
            "required": false,
            "display_name_en": "alignSoftClipAtReferenceEnds",
            "display_name_cn": "alignSoftClipAtReferenceEnds",
            "description_en": "allow the soft-clipping of the alignments past the end of the chromosomes",
            "description_cn": "allow the soft-clipping of the alignments past the end of the chromosomes",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 138,
            "key": "alignInsertionFlush",
            "map_key": "--alignInsertionFlush",
            "type": "String",
            "required": false,
            "display_name_en": "alignInsertionFlush",
            "display_name_cn": "alignInsertionFlush",
            "description_en": "how to flush ambiguous insertion positions",
            "description_cn": "how to flush ambiguous insertion positions",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 139,
            "key": "peOverlapNbasesMin",
            "map_key": "--peOverlapNbasesMin",
            "type": "String",
            "required": false,
            "display_name_en": "peOverlapNbasesMin",
            "display_name_cn": "peOverlapNbasesMin",
            "description_en": "minimum number of overlap bases to trigger mates merging and realignment",
            "description_cn": "minimum number of overlap bases to trigger mates merging and realignment",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 140,
            "key": "peOverlapMMp",
            "map_key": "--peOverlapMMp",
            "type": "String",
            "required": false,
            "display_name_en": "peOverlapMMp",
            "display_name_cn": "peOverlapMMp",
            "description_en": "maximum proportion of mismatched bases in the overlap area",
            "description_cn": "maximum proportion of mismatched bases in the overlap area",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 141,
            "key": "winAnchorMultimapNmax",
            "map_key": "--winAnchorMultimapNmax",
            "type": "String",
            "required": false,
            "display_name_en": "winAnchorMultimapNmax",
            "display_name_cn": "winAnchorMultimapNmax",
            "description_en": "max number of loci anchors are allowed to map to",
            "description_cn": "max number of loci anchors are allowed to map to",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 142,
            "key": "winBinNbits",
            "map_key": "--winBinNbits",
            "type": "String",
            "required": false,
            "display_name_en": "winBinNbits",
            "display_name_cn": "winBinNbits",
            "description_en": "=log2(winBin), where winBin is the size of the bin for the windows/clustering, each window will occupy an integer number of bins.",
            "description_cn": "=log2(winBin), where winBin is the size of the bin for the windows/clustering, each window will occupy an integer number of bins.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 143,
            "key": "winAnchorDistNbins",
            "map_key": "--winAnchorDistNbins",
            "type": "String",
            "required": false,
            "display_name_en": "winAnchorDistNbins",
            "display_name_cn": "winAnchorDistNbins",
            "description_en": "max number of bins between two anchors that allows aggregation of anchors into one window",
            "description_cn": "max number of bins between two anchors that allows aggregation of anchors into one window",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 144,
            "key": "winFlankNbins",
            "map_key": "--winFlankNbins",
            "type": "String",
            "required": false,
            "display_name_en": "winFlankNbins",
            "display_name_cn": "winFlankNbins",
            "description_en": "log2(winFlank), where win Flank is the size of the left and right flanking regions for each window",
            "description_cn": "log2(winFlank), where win Flank is the size of the left and right flanking regions for each window",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 145,
            "key": "winReadCoverageRelativeMin",
            "map_key": "--winReadCoverageRelativeMin",
            "type": "String",
            "required": false,
            "display_name_en": "winReadCoverageRelativeMin",
            "display_name_cn": "winReadCoverageRelativeMin",
            "description_en": "minimum relative coverage of the read sequence by the seeds in a window, for STARlong algorithm only.",
            "description_cn": "minimum relative coverage of the read sequence by the seeds in a window, for STARlong algorithm only.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 146,
            "key": "winReadCoverageBasesMin",
            "map_key": "--winReadCoverageBasesMin",
            "type": "String",
            "required": false,
            "display_name_en": "winReadCoverageBasesMin",
            "display_name_cn": "winReadCoverageBasesMin",
            "description_en": "minimum number of bases covered by the seeds in a window , for STARlong algorithm only.",
            "description_cn": "minimum number of bases covered by the seeds in a window , for STARlong algorithm only.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 147,
            "key": "chimOutType",
            "map_key": "--chimOutType",
            "type": "String",
            "required": false,
            "display_name_en": "chimOutType",
            "display_name_cn": "chimOutType",
            "description_en": "type of chimeric output",
            "description_cn": "type of chimeric output",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 148,
            "key": "chimSegmentMin",
            "map_key": "--chimSegmentMin",
            "type": "String",
            "required": false,
            "display_name_en": "chimSegmentMin",
            "display_name_cn": "chimSegmentMin",
            "description_en": "minimum length of chimeric segment length, if ==0, no chimeric output",
            "description_cn": "minimum length of chimeric segment length, if ==0, no chimeric output",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 149,
            "key": "chimScoreMin",
            "map_key": "--chimScoreMin",
            "type": "String",
            "required": false,
            "display_name_en": "chimScoreMin",
            "display_name_cn": "chimScoreMin",
            "description_en": "minimum total (summed) score of the chimeric segments",
            "description_cn": "minimum total (summed) score of the chimeric segments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 150,
            "key": "chimScoreDropMax",
            "map_key": "--chimScoreDropMax",
            "type": "String",
            "required": false,
            "display_name_en": "chimScoreDropMax",
            "display_name_cn": "chimScoreDropMax",
            "description_en": "max drop (difference) of chimeric score (the sum of scores of all chimeric segments) from the read length",
            "description_cn": "max drop (difference) of chimeric score (the sum of scores of all chimeric segments) from the read length",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 151,
            "key": "chimScoreSeparation",
            "map_key": "--chimScoreSeparation",
            "type": "String",
            "required": false,
            "display_name_en": "chimScoreSeparation",
            "display_name_cn": "chimScoreSeparation",
            "description_en": "minimum difference (separation) between the best chimeric score and the next one",
            "description_cn": "minimum difference (separation) between the best chimeric score and the next one",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 152,
            "key": "chimScoreJunctionNonGTAG",
            "map_key": "--chimScoreJunctionNonGTAG",
            "type": "String",
            "required": false,
            "display_name_en": "chimScoreJunctionNonGTAG",
            "display_name_cn": "chimScoreJunctionNonGTAG",
            "description_en": "penalty for a non-GT/AG chimeric junction",
            "description_cn": "penalty for a non-GT/AG chimeric junction",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 153,
            "key": "chimJunctionOverhangMin",
            "map_key": "--chimJunctionOverhangMin",
            "type": "String",
            "required": false,
            "display_name_en": "chimJunctionOverhangMin",
            "display_name_cn": "chimJunctionOverhangMin",
            "description_en": "minimum overhang for a chimeric junction",
            "description_cn": "minimum overhang for a chimeric junction",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 154,
            "key": "chimSegmentReadGapMax",
            "map_key": "--chimSegmentReadGapMax",
            "type": "String",
            "required": false,
            "display_name_en": "chimSegmentReadGapMax",
            "display_name_cn": "chimSegmentReadGapMax",
            "description_en": "maximum gap in the read sequence between chimeric segments",
            "description_cn": "maximum gap in the read sequence between chimeric segments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 155,
            "key": "chimFilter",
            "map_key": "--chimFilter",
            "type": "String",
            "required": false,
            "display_name_en": "chimFilter",
            "display_name_cn": "chimFilter",
            "description_en": "different filters for chimeric alignments",
            "description_cn": "different filters for chimeric alignments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 156,
            "key": "chimMainSegmentMultNmax",
            "map_key": "--chimMainSegmentMultNmax",
            "type": "String",
            "required": false,
            "display_name_en": "chimMainSegmentMultNmax",
            "display_name_cn": "chimMainSegmentMultNmax",
            "description_en": "maximum number of multi-alignments for the main chimeric segment. =1 will prohibit multimapping main segments.",
            "description_cn": "maximum number of multi-alignments for the main chimeric segment. =1 will prohibit multimapping main segments.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 157,
            "key": "chimMultimapNmax",
            "map_key": "--chimMultimapNmax",
            "type": "String",
            "required": false,
            "display_name_en": "chimMultimapNmax",
            "display_name_cn": "chimMultimapNmax",
            "description_en": "maximum number of chimeric multi-alignments",
            "description_cn": "maximum number of chimeric multi-alignments",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 158,
            "key": "chimMultimapScoreRange",
            "map_key": "--chimMultimapScoreRange",
            "type": "String",
            "required": false,
            "display_name_en": "chimMultimapScoreRange",
            "display_name_cn": "chimMultimapScoreRange",
            "description_en": "the score range for multi-mapping chimeras below the best chimeric score. Only works with --chimMultimapNmax > 1",
            "description_cn": "the score range for multi-mapping chimeras below the best chimeric score. Only works with --chimMultimapNmax > 1",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 159,
            "key": "chimNonchimScoreDropMin",
            "map_key": "--chimNonchimScoreDropMin",
            "type": "String",
            "required": false,
            "display_name_en": "chimNonchimScoreDropMin",
            "display_name_cn": "chimNonchimScoreDropMin",
            "description_en": "to trigger chimeric detection, the drop in the best non-chimeric alignment score with respect to the read length has to be greater than this value",
            "description_cn": "to trigger chimeric detection, the drop in the best non-chimeric alignment score with respect to the read length has to be greater than this value",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 160,
            "key": "chimOutJunctionFormat",
            "map_key": "--chimOutJunctionFormat",
            "type": "String",
            "required": false,
            "display_name_en": "chimOutJunctionFormat",
            "display_name_cn": "chimOutJunctionFormat",
            "description_en": "formatting type for the Chimeric.out.junction file",
            "description_cn": "formatting type for the Chimeric.out.junction file",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 161,
            "key": "quantMode",
            "map_key": "--quantMode",
            "type": "String",
            "required": false,
            "display_name_en": "quantMode",
            "display_name_cn": "quantMode",
            "description_en": "types of quantification requested",
            "description_cn": "types of quantification requested",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 162,
            "key": "quantTranscriptomeBAMcompression",
            "map_key": "--quantTranscriptomeBAMcompression",
            "type": "String",
            "required": false,
            "display_name_en": "quantTranscriptomeBAMcompression",
            "display_name_cn": "quantTranscriptomeBAMcompression",
            "description_en": "-2 to 10  transcriptome BAM compression level",
            "description_cn": "-2 to 10  transcriptome BAM compression level",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 163,
            "key": "quantTranscriptomeBan",
            "map_key": "--quantTranscriptomeBan",
            "type": "String",
            "required": false,
            "display_name_en": "quantTranscriptomeBan",
            "display_name_cn": "quantTranscriptomeBan",
            "description_en": "prohibit various alignment type",
            "description_cn": "prohibit various alignment type",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 164,
            "key": "twopassMode",
            "map_key": "--twopassMode",
            "type": "String",
            "required": false,
            "display_name_en": "twopassMode",
            "display_name_cn": "twopassMode",
            "description_en": "2-pass mapping mode.",
            "description_cn": "2-pass mapping mode.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 165,
            "key": "twopass1readsN",
            "map_key": "--twopass1readsN",
            "type": "String",
            "required": false,
            "display_name_en": "twopass1readsN",
            "display_name_cn": "twopass1readsN",
            "description_en": "number of reads to process for the 1st step. Use very large number (or default -1) to map all reads in the first step.",
            "description_cn": "number of reads to process for the 1st step. Use very large number (or default -1) to map all reads in the first step.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 166,
            "key": "waspOutputMode",
            "map_key": "--waspOutputMode",
            "type": "String",
            "required": false,
            "display_name_en": "waspOutputMode",
            "display_name_cn": "waspOutputMode",
            "description_en": "WASP allele-specific output type. This is re-implementation of the original WASP mappability filtering by Bryce van de Geijn, Graham McVicker, Yoav Gilad & Jonathan K Pritchard. Please cite the original WASP paper: Nature Methods 12, 1061\u20131063 (2015), https://www.nature.com/articles/nmeth.3582 .",
            "description_cn": "WASP allele-specific output type. This is re-implementation of the original WASP mappability filtering by Bryce van de Geijn, Graham McVicker, Yoav Gilad & Jonathan K Pritchard. Please cite the original WASP paper: Nature Methods 12, 1061\u20131063 (2015), https://www.nature.com/articles/nmeth.3582 .",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 167,
            "key": "soloType",
            "map_key": "--soloType",
            "type": "String",
            "required": false,
            "display_name_en": "soloType",
            "display_name_cn": "soloType",
            "description_en": "type of single-cell RNA-seq",
            "description_cn": "type of single-cell RNA-seq",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 168,
            "key": "soloCBwhitelist",
            "map_key": "--soloCBwhitelist",
            "type": "String",
            "required": false,
            "display_name_en": "soloCBwhitelist",
            "display_name_cn": "soloCBwhitelist",
            "description_en": "file(s) with whitelist(s) of cell barcodes. Only --soloType CB_UMI_Complex allows more than one whitelist file.",
            "description_cn": "file(s) with whitelist(s) of cell barcodes. Only --soloType CB_UMI_Complex allows more than one whitelist file.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 169,
            "key": "soloCBstart",
            "map_key": "--soloCBstart",
            "type": "String",
            "required": false,
            "display_name_en": "soloCBstart",
            "display_name_cn": "soloCBstart",
            "description_en": "cell barcode start base",
            "description_cn": "cell barcode start base",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 170,
            "key": "soloCBlen",
            "map_key": "--soloCBlen",
            "type": "String",
            "required": false,
            "display_name_en": "soloCBlen",
            "display_name_cn": "soloCBlen",
            "description_en": "cell barcode length",
            "description_cn": "cell barcode length",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 171,
            "key": "soloUMIstart",
            "map_key": "--soloUMIstart",
            "type": "String",
            "required": false,
            "display_name_en": "soloUMIstart",
            "display_name_cn": "soloUMIstart",
            "description_en": "UMI start base",
            "description_cn": "UMI start base",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 172,
            "key": "soloUMIlen",
            "map_key": "--soloUMIlen",
            "type": "String",
            "required": false,
            "display_name_en": "soloUMIlen",
            "display_name_cn": "soloUMIlen",
            "description_en": "UMI length",
            "description_cn": "UMI length",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 173,
            "key": "soloBarcodeReadLength",
            "map_key": "--soloBarcodeReadLength",
            "type": "String",
            "required": false,
            "display_name_en": "soloBarcodeReadLength",
            "display_name_cn": "soloBarcodeReadLength",
            "description_en": "length of the barcode read",
            "description_cn": "length of the barcode read",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 174,
            "key": "soloCBposition",
            "map_key": "--soloCBposition",
            "type": "String",
            "required": false,
            "display_name_en": "soloCBposition",
            "display_name_cn": "soloCBposition",
            "description_en": "position of Cell Barcode(s) on the barcode read.",
            "description_cn": "position of Cell Barcode(s) on the barcode read.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 175,
            "key": "soloUMIposition",
            "map_key": "--soloUMIposition",
            "type": "String",
            "required": false,
            "display_name_en": "soloUMIposition",
            "display_name_cn": "soloUMIposition",
            "description_en": "position of the UMI on the barcode read, same as soloCBposition",
            "description_cn": "position of the UMI on the barcode read, same as soloCBposition",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 176,
            "key": "soloAdapterSequence",
            "map_key": "--soloAdapterSequence",
            "type": "String",
            "required": false,
            "display_name_en": "soloAdapterSequence",
            "display_name_cn": "soloAdapterSequence",
            "description_en": "adapter sequence to anchor barcodes.",
            "description_cn": "adapter sequence to anchor barcodes.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 177,
            "key": "soloAdapterMismatchesNmax",
            "map_key": "--soloAdapterMismatchesNmax",
            "type": "String",
            "required": false,
            "display_name_en": "soloAdapterMismatchesNmax",
            "display_name_cn": "soloAdapterMismatchesNmax",
            "description_en": "maximum number of mismatches allowed in adapter sequence.",
            "description_cn": "maximum number of mismatches allowed in adapter sequence.",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 178,
            "key": "soloCBmatchWLtype",
            "map_key": "--soloCBmatchWLtype",
            "type": "String",
            "required": false,
            "display_name_en": "soloCBmatchWLtype",
            "display_name_cn": "soloCBmatchWLtype",
            "description_en": "matching the Cell Barcodes to the WhiteList",
            "description_cn": "matching the Cell Barcodes to the WhiteList",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 179,
            "key": "soloStrand",
            "map_key": "--soloStrand",
            "type": "String",
            "required": false,
            "display_name_en": "soloStrand",
            "display_name_cn": "soloStrand",
            "description_en": "strandedness of the solo libraries:",
            "description_cn": "strandedness of the solo libraries:",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 180,
            "key": "soloFeatures",
            "map_key": "--soloFeatures",
            "type": "String",
            "required": false,
            "display_name_en": "soloFeatures",
            "display_name_cn": "soloFeatures",
            "description_en": "genomic features for which the UMI counts per Cell Barcode are collected",
            "description_cn": "genomic features for which the UMI counts per Cell Barcode are collected",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 181,
            "key": "soloUMIdedup",
            "map_key": "--soloUMIdedup",
            "type": "String",
            "required": false,
            "display_name_en": "soloUMIdedup",
            "display_name_cn": "soloUMIdedup",
            "description_en": "type of UMI deduplication (collapsing) algorithm",
            "description_cn": "type of UMI deduplication (collapsing) algorithm",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 182,
            "key": "soloUMIfiltering",
            "map_key": "--soloUMIfiltering",
            "type": "String",
            "required": false,
            "display_name_en": "soloUMIfiltering",
            "display_name_cn": "soloUMIfiltering",
            "description_en": "type of UMI filtering",
            "description_cn": "type of UMI filtering",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 183,
            "key": "soloOutFileNames",
            "map_key": "--soloOutFileNames",
            "type": "String",
            "required": false,
            "display_name_en": "soloOutFileNames",
            "display_name_cn": "soloOutFileNames",
            "description_en": "",
            "description_cn": "",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 184,
            "key": "soloCellFilter",
            "map_key": "--soloCellFilter",
            "type": "String",
            "required": false,
            "display_name_en": "soloCellFilter",
            "display_name_cn": "soloCellFilter",
            "description_en": "cell filtering type and parameters",
            "description_cn": "cell filtering type and parameters",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        },
        {
            "order": 185,
            "key": "soloClusterCBfile",
            "map_key": "--soloClusterCBfile",
            "type": "String",
            "required": false,
            "display_name_en": "soloClusterCBfile",
            "display_name_cn": "soloClusterCBfile",
            "description_en": "file containing the cluster information for cell barcodes, two columns: CB cluster_index. Only used with --soloFeatures Transcript3p",
            "description_cn": "file containing the cluster information for cell barcodes, two columns: CB cluster_index. Only used with --soloFeatures Transcript3p",
            "validation_rule": "",
            "default": "",
            "value_from": ""
        }
    ],
    "input_files": []
}
]